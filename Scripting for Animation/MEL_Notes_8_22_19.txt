Common Variables
	-float
	-int
	-string
	-array

EX.

string $name;
$name = "Ryley";

	//all variables have to start with "$"
	//all lines end with ";"
	//once the line has been defined as a string, it stays a string unless you start
	your code with an open/close curly brackets.

ARRAY
//to set up an array you have to add "[]" following the datatype

EX.

string $ages[]; 
$ages[0] = "Tyler";
$ages[1] = "Jesse";
$ages[2] = "Pam";
print $ages; 

	//once the "[]" have been defined, you don't need to rewrite it. 



//ADVANCED SCRIPTING MACRO ii: EXAMPLE

{ int $radius = 1; string $obj[]; string $objects[];

$obj = `polySphere -radius $radius`;
print $obj;
//NEST IN BACK-TICK (`) WHEN DOING "=" OPERATIONS, OR MAYA WILL THROW AN ERROR

move -absolute -worldSpace 0 ($radius*2) 0 $obj[0];
$radius++;
//THIS IS WHERE ANY ADJUSTING TO THE SPECIFIC OBJECT WILL GO

$objects[size($objects)] = $obj[0];
//SENDS RECENT OBJECT TO BACK OF THE ARRAY. MOVES ONTO THE NEXT
//COPY TO REPEAT ACTION, OR DON'T TO CREATE NEW, UNIQUE GEOMETRY

$obj = `polySphere -radius $radius`;
print $obj;

move -absolute -worldSpace 0 ($radius*2) 0 $obj[0];
$radius++;

$objects[size($objects)] = $obj[0];

$obj = `polySphere -radius $radius`;
print $obj;

move -absolute -worldSpace 0 ($radius*2) 0 $obj[0];
$radius++;

$objects[size($objects)] = $obj[0];

$obj = `polySphere -radius $radius`;
print $obj;

move -absolute -worldSpace 0 ($radius*2) 0 $obj[0];
$radius++;

$objects[size($objects)] = $obj[0];
}